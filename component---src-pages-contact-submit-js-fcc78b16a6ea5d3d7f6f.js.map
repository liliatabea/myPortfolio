{"version":3,"sources":["webpack://Eigenlicht/./src/pages/contact-submit.js","webpack://Eigenlicht/./src/sketches/sketch04.js"],"names":["ContactSubmitPage","location","siteTitle","data","site","siteMetadata","title","keywords","className","props","StaticQuery","query","render","SketchFour","Sketch","p","width","height","gapper","setup","windowWidth","createCanvas","background","fill","noStroke","x","y","ellipse","draw","noFill","colorX","map","colorY","rad1","mouseX","rad2","mouseY","stroke","rect","myRef","React","componentDidMount","this","myP5","p5","current","ref"],"mappings":"wKAYMA,EAAoB,SAAC,EAAUC,GAAc,IAC3CC,EAD0C,EAArBC,KACJC,KAAKC,aAAaC,MAEzC,OACE,gBAAC,IAAD,CAAQA,MAAOJ,GACb,gBAAC,IAAD,CAAKI,MAAM,UAAUC,SAAU,CAAC,OAAD,iCAE/B,2BAASC,UAAU,uCACjB,uBAAKA,UAAU,qBACb,uCAGA,wFAEA,uBAAKA,UAAU,uDAEf,0BAAQA,UAAU,iBAClB,gBAAC,IAAD,WAoBV,mBAAeC,GAAK,OAClB,gBAAC,EAAAC,YAAD,CACEC,MAZY,aAaZC,OAAQ,SAAAT,GAAI,OACV,gBAACH,EAAD,eAAmBC,SAAUQ,EAAMR,SAAUE,KAAMA,GAAUM,S,4GChDtDI,EAAb,YACE,WAAYJ,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAIFK,OAAS,SAACC,GACR,IACIC,EADAC,EAAS,IAETC,EAAS,IAEZH,EAAEI,MAAQ,WACRH,EAAS,GAAMD,EAAEK,YACjBL,EAAEM,aAAaL,EAAOC,GACtBF,EAAEO,WAAW,KACbP,EAAEQ,KAAK,IAAI,IAAI,IAAK,IACpBR,EAAES,WAEF,IAAK,IAAIC,GAAE,GAAWA,EAAET,EAAME,EAAQO,GAAGP,EACvC,IAAK,IAAIQ,GAAE,GAAWA,EAAET,IAAeS,GAAGR,EACxCH,EAAEY,QAAQF,EAAGC,EAAGR,GAAUA,KAGhCH,EAAEa,KAAO,WACPb,EAAEc,SAEF,IAAK,IAAIJ,GAAE,KAAqBA,EAAE,EAAET,EAAOS,GAAGP,EAC5C,IAAK,IAAIQ,GAAE,IAAoBA,EAAE,IAAUA,GAAGR,EAAO,CACnD,IAAIY,EAASf,EAAEgB,IAAIN,EAAG,EAAGT,EAAO,IAAK,IACjCgB,EAASjB,EAAEgB,IAAIL,EAAG,EAAGT,EAAQ,GAAI,KACjCgB,EAAOlB,EAAEgB,IAAIhB,EAAEmB,OAAQ,EAAG,IAAM,GAAI,KACpCC,EAAOpB,EAAEgB,IAAIhB,EAAEqB,OAAQ,EAAG,IAAM,GAAI,KACxCrB,EAAEsB,OAAOP,EAAQ,IAAKE,EAAO,IAC7BjB,EAAEY,QAAQF,EAAGC,EAAGO,EAAME,GAEtBpB,EAAEQ,KAAK,IAAK,IACZR,EAAES,WACFT,EAAEuB,KAAK,EAAG,EAAGtB,EAAOC,KAlC3B,EAAKsB,MAAQC,cAFI,GADrB,uCAwCAC,kBAAA,WACIC,KAAKC,KAAO,IAAIC,IAAJ,CAAOF,KAAK5B,OAAQ4B,KAAKH,MAAMM,UAzC/C,EA4CAjC,OAAA,WACI,OACE,uBAAKkC,IAAKJ,KAAKH,SA9CrB,GAAgCC","file":"component---src-pages-contact-submit-js-fcc78b16a6ea5d3d7f6f.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\n// for use of P5\nimport { SketchFour } from '../sketches/sketch04';\n\nconst ContactSubmitPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO title=\"Contact\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n\n      <article className=\"post-content page-template no-image\">\n        <div className=\"post-content-body\">\n          <h4>\n            THANK YOU\n          </h4>\n          <h4>Your message has been sent. I'll get back to you shortly.</h4>\n          </div>\n          <div className=\"post-content page-template post-content-body center\">\n\n          <figure className=\"kg-embed-card\">\n          <SketchFour />\n          </figure>\n\n\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <ContactSubmitPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n","import React from \"react\";\nimport p5 from \"p5\";\n\n\n\nexport class SketchFour extends React.Component {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n  }\n\n  Sketch = (p) => {\n    let height = 500;\n    let width;\n    let gapper = 100;\n\n     p.setup = () => {\n       width =  0.8 * p.windowWidth;\n       p.createCanvas(width, height);\n       p.background(248);\n       p.fill(248,248,248, 10);\n       p.noStroke();\n\n       for (let x=-gapper/2; x<width+gapper; x+=gapper)\n         for (let y=-gapper/2; y<height+gapper; y+=gapper)\n           p.ellipse(x, y, gapper/2, gapper/2);\n     }\n\n     p.draw = () => {\n       p.noFill();\n\n       for (let x=-gapper*10-gapper/2; x<2*width; x+=gapper){\n         for (let y=-gapper*4-gapper/2; y<2*height; y+=gapper){\n           let colorX = p.map(x, 0, width, 200, 50);\n           let colorY = p.map(y, 0, height, 50, 200);\n           let rad1 = p.map(p.mouseX, 0, 2000, 50, 800);\n           let rad2 = p.map(p.mouseY, 0, 2000, 50, 800);\n           p.stroke(colorX, 200, colorY,20);\n           p.ellipse(x, y, rad1, rad2);\n         }}\n           p.fill(255, 20);\n           p.noStroke();\n           p.rect(0, 0, width, height);\n         };\n};\ncomponentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current)\n  }\n\nrender() {\n    return (\n      <div ref={this.myRef}>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}